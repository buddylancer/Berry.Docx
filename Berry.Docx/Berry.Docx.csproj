<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net35;net40;net48;netcoreapp2.1;netstandard2.0;net6.0</TargetFrameworks>
    <OutputType>Library</OutputType>
    <GenerateDocumentationFile>True</GenerateDocumentationFile>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <ApplicationIcon />
    <StartupObject />
    <Description>Berry.Docx 是一款用于读写 Word 2007+ (.docx) 文档的.NET 库，无需 Word 应用程序。 旨在提供简便，完整，友好的接口来封装底层的 OpenXML API。
Berry.Docx is a .NET library for reading, manipulating and writing Word 2007+ (.docx) files without the Word application. It aims to provide an intuitive, full and user-friendly interface to dealing with the underlying OpenXML API.</Description>
    <Authors>番茄土豆</Authors>
    <Company></Company>
    <Copyright>© theyangfan 2023. All rights reserved.</Copyright>
    <PackageTags>word, docx, openxml, office</PackageTags>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageProjectUrl>https://github.com/theyangfan/Berry.Docx</PackageProjectUrl>
    <Version>1.3.6-beta7</Version>
    <PackageReleaseNotes>* 支持读取段落中的字符的最终格式 (Supports reading the final format of characters of the paragraph)；
  
* 新增了 Berry.Docx.Visual 项目，用于构建文档在显示时的组成结构 (Added Berry.Docx.Visua project, Used to build the structure of the document when display)。
  
* 新增了对 .NET Framework 3.5 的支持 (Supports .NET Framework 3.5)；
  
* 修复了一些问题 (Fixed some bugs)。</PackageReleaseNotes>
    <RepositoryUrl>https://github.com/theyangfan/Berry.Docx</RepositoryUrl>
    <PackageIcon>logo.png</PackageIcon>
    <TargetFramework>netstandard2.0</TargetFramework>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DefineConstants>TRACE</DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="Interface\**" />
    <EmbeddedResource Remove="Interface\**" />
    <None Remove="Interface\**" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="DocumentFormat.OpenXml" Version="2.15.0" />
  </ItemGroup>

  <Choose>
    <When Condition=" '$(TargetFramework)' == 'net35'">
      <ItemGroup>
        <Reference Include="System.Drawing" />
      </ItemGroup>
    </When>

    <When Condition=" '$(TargetFramework)' == 'net40'">
      <ItemGroup>
        <Reference Include="System.Drawing" />
      </ItemGroup>
    </When>
    
    <When Condition=" '$(TargetFramework)' == 'net48'">
      <ItemGroup>
        <PackageReference Include="SixLabors.ImageSharp" Version="2.1.4" />
      </ItemGroup>
    </When>
    
    <When Condition=" '$(TargetFramework)' == 'netcoreapp2.1'">
      <ItemGroup>
        <PackageReference Include="Microsoft.NETCore.Platforms" Version="6.0.6" />
        <PackageReference Include="SixLabors.ImageSharp" Version="2.1.4" />
      </ItemGroup>
    </When>
    
    <When Condition=" '$(TargetFramework)' == 'netstandard2.0'">
      <ItemGroup>
        <PackageReference Include="SixLabors.ImageSharp" Version="2.1.4" />
      </ItemGroup>
    </When>

    <When Condition=" '$(TargetFramework)' == 'net6.0'">
      <ItemGroup>
        <PackageReference Include="SixLabors.ImageSharp" Version="2.1.4" />
      </ItemGroup>
    </When>
  </Choose>
  
  <ItemGroup>
    <None Include="..\LICENSE">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
    <None Include="..\images\logo.png">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <None Include="..\README.md">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

</Project>
